import org.apache.tools.ant.Project
import org.apache.tools.ant.ProjectHelper
import java.nio.file.Files

def propertyMap=[keyA: 'valueA']
def writePropMap=[keyB: 'valueB']
def xmlFilePath='C:/iets3_original/iets3.opensource/build/iets3.opensource.tests/build_input_output.xml'
def inputFileList =new ArrayList()
def outputFileList =new ArrayList()
def resolvedInputFileList =new ArrayList()
def resolvedOutputFileList =new ArrayList()


ant.importBuild('/build.xml'){ target -> 'third_ant_run-' + target }

task readProperty() {
    def antProject = new Project()
    ProjectHelper.configureProject(antProject, file(xmlFilePath))
    propertyMap = antProject.getProperties()
    propertyMap.each { keyA, valueA -> writePropMap.put("\${" + "$keyA" + "}", "$valueA") }
    //writePropMap.each { keyB, valueB -> println "$keyB --> $valueB" }
}

task parseXml(dependsOn: 'readProperty') {
    def parsedProjectXml = new XmlSlurper().parse(xmlFilePath)
    parsedProjectXml.target.input.file.each { file -> inputFileList.add(file.@path) }
    inputFileList.each {
        if (it.toString().contains("\$")) {
            def toResolveString = it.toString().split("/").getAt(0)
            def resolvedPath = it.toString().replace(toResolveString, writePropMap.get(toResolveString))
            resolvedInputFileList.add(resolvedPath)
        }
    }
    parsedProjectXml.target.output.file.each { file -> outputFileList.add(file.@path) }
    outputFileList.each {
        if (it.toString().contains("\$")) {
            def toResolveString = it.toString().split("/").getAt(0)
            def resolvedPath = it.toString().replace(toResolveString, writePropMap.get(toResolveString))
            resolvedOutputFileList.add(resolvedPath)
        }
    }
}

tasks['third_ant_run-generate'].inputs.files(resolvedInputFileList)
tasks['third_ant_run-generate'].outputs.files(resolvedOutputFileList)

tasks['third_ant_run-assemble'].inputs.files(resolvedInputFileList)
tasks['third_ant_run-assemble'].outputs.files(resolvedOutputFileList)

task iets3TestsTask {
    dependsOn 'third_ant_run-generate'
    dependsOn 'third_ant_run-assemble'
}

